Imports Entities
Imports Newtonsoft.Json
Imports Npgsql.Logging
Imports pcm.DataLayer.dlLoggingNpgSQL

Public Class SurveyDataLayer
    Dim RG As New Utilities.clsUtil

    Private _baseResponse As New BaseResponse
    Private _saveSurveyResponse As New SaveSurveyResponse
    Private _surveyDetailsResponse As New SurveyDetailsResponse

    Dim tmpSQL As String
    Dim ds As DataSet

    Dim DebtorDataLayer As New DebtorsDataLayer


    Public Function SaveSurvey(ByVal _createSurveyRequest As SaveSurveyRequest
                                        ) As SaveSurveyResponse

        Dim objDBWrite As New dlNpgSQL("PostgreConnectionStringPCMWrite")

        Try
            If _createSurveyRequest.SurveyName = "" Then
                _saveSurveyResponse.Message = "Please enter SurveyName."
                _saveSurveyResponse.Success = False
                Return _saveSurveyResponse
            End If

            If _createSurveyRequest.TypeOfSurvey = "" Then

                _saveSurveyResponse.Message = "Please select Type Of Survey."
                _saveSurveyResponse.Success = False
                Return _saveSurveyResponse
            End If

            If _createSurveyRequest.MaxTimeAllowed = "" Then
                _saveSurveyResponse.Message = "Please select MaxTimeAllowed."
                _saveSurveyResponse.Success = False
                Return _saveSurveyResponse
            End If

            If _createSurveyRequest.SurveyId = "" Then
                Dim survey_id As String = System.Guid.NewGuid.ToString()

                tmpSQL = "Insert into survey_master(survey_id, survey_name, type_of_survey, is_active, max_time_allowed, created_by) 
                        values('" & survey_id & "', '" & RG.Apos(_createSurveyRequest.SurveyName) & "','" & RG.Apos(_createSurveyRequest.TypeOfSurvey) & "','" & _createSurveyRequest.IsActive & "','" & _createSurveyRequest.MaxTimeAllowed & "','" & _createSurveyRequest.CreatedBy & "')"

                _saveSurveyResponse.Message = "Survey created successfully."
                _saveSurveyResponse.SurveyId = survey_id
                _saveSurveyResponse.IsRedirect = True
            Else
                Dim survey_id As String = _createSurveyRequest.SurveyId

                tmpSQL = "Update survey_master set survey_name = '" & RG.Apos(_createSurveyRequest.SurveyName) & "', type_of_survey = '" & RG.Apos(_createSurveyRequest.TypeOfSurvey) & "', is_active = '" & _createSurveyRequest.IsActive & "', max_time_allowed = '" & _createSurveyRequest.MaxTimeAllowed & "' where survey_id = '" & survey_id & "'"

                _saveSurveyResponse.Message = "Survey updated successfully."
                _saveSurveyResponse.SurveyId = survey_id
                _saveSurveyResponse.IsRedirect = False
            End If
            objDBWrite.ExecuteQuery(tmpSQL)
        Catch ex As Exception
            If (objDBWrite IsNot Nothing) Then
                objDBWrite.CloseConnection()
            End If
            _saveSurveyResponse.Message = "Some issue occured. Please try again."
            _saveSurveyResponse.Success = False
            Return _saveSurveyResponse
        Finally
            If (objDBWrite IsNot Nothing) Then
                objDBWrite.CloseConnection()
            End If
        End Try

        _saveSurveyResponse.Success = True
        Return _saveSurveyResponse
    End Function

    Public Function SaveQuestion(ByVal SurveyId As String, ByVal QuestionDetailJsonString As String) As BaseResponse
        Dim objDBWrite As New dlNpgSQL("PostgreConnectionStringPCMWrite")
        Try
            Dim SaveQuestionDetail As SaveQuestionRequest = JsonConvert.DeserializeObject(Of SaveQuestionRequest)(QuestionDetailJsonString)

            If SaveQuestionDetail.question_text = "" Then
                _baseResponse.Message = "Please enter question."
                _baseResponse.Success = False
                Return _baseResponse
            End If

            If SaveQuestionDetail.Options.Count < 2 Or SaveQuestionDetail.Options.Count > 5 Then
                If SaveQuestionDetail.Options.Count < 2 Then
                    _baseResponse.Message = "Please add atleast two options."
                Else
                    _baseResponse.Message = "Please add atmost five options."
                End If
                _baseResponse.Success = False
                Return _baseResponse
            End If

            Dim AnswerCheck As Boolean = False

            Dim optionsTempSQL = ""

            Dim updateTempSQLArray As New List(Of String)()

            Dim i As Integer = 1
            For Each AnswerOption As AnswerOption In SaveQuestionDetail.Options
                If AnswerOption.option_text = "" Then
                    _baseResponse.Message = "Please fill all options that you have added."
                    _baseResponse.Success = False
                    Return _baseResponse
                End If

                If AnswerOption.is_correct = True Then
                    AnswerCheck = True
                End If

                If AnswerOption.option_id > 0 Then
                    updateTempSQLArray.Add("UPDATE survey_questions_options SET option_text='" & AnswerOption.option_text & "', is_correct='" & AnswerOption.is_correct & "' WHERE question_id='{question_id}' and option_id='" & AnswerOption.option_id & "'")
                Else
                    If optionsTempSQL = "" Then
                        optionsTempSQL &= "Insert into survey_questions_options(survey_id, question_id, option_id, option_text, is_correct) values "
                    End If

                    optionsTempSQL &= "('" & SurveyId & "', '{question_id}', '" & i & "',  '" & RG.Apos(AnswerOption.option_text) & "' , '" & RG.Apos(AnswerOption.is_correct) & "'),"
                End If

                i += 1
            Next

            If AnswerCheck = False Then
                'Answer Error
                _baseResponse.Message = "Please select answer."
                _baseResponse.Success = False
                Return _baseResponse
            End If


            tmpSQL = "SELECT * FROM survey_master WHERE survey_id = '" & SurveyId & "'"
            ds = objDBWrite.GetDataSet(tmpSQL)

            If objDBWrite.isR(ds) = False Then
                _baseResponse.Message = "Survey id does not exist."
                _baseResponse.Success = False
                Return _baseResponse
                Exit Function
            End If

            If SaveQuestionDetail.question_id <> "" Then
                Dim question_id As String = SaveQuestionDetail.question_id

                tmpSQL = "SELECT * FROM survey_questions_master WHERE survey_id = '" & SurveyId & "' and question_id='" & question_id & "'"
                ds = objDBWrite.GetDataSet(tmpSQL)
                If objDBWrite.isR(ds) = False Then
                    _baseResponse.Message = "Question id does not exist."
                    _baseResponse.Success = False
                    Return _baseResponse
                    Exit Function
                End If

                'Update Question 

                tmpSQL = "Update survey_questions_master SET question_text = '" & SaveQuestionDetail.question_text & "' WHERE survey_id='" & SurveyId & "' and question_id='" & question_id & "'"
                objDBWrite.ExecuteQuery(tmpSQL)

                'Insert New Options of Question
                If optionsTempSQL <> "" Then
                    optionsTempSQL = optionsTempSQL.Trim().Substring(0, optionsTempSQL.Length - 1)

                    optionsTempSQL = optionsTempSQL.Replace("{question_id}", question_id)

                    tmpSQL = optionsTempSQL
                    objDBWrite.ExecuteQuery(tmpSQL)
                End If


                'Update Old Option of Question

                For Each updateTempSQL As String In updateTempSQLArray
                    updateTempSQL = updateTempSQL.Replace("{question_id}", question_id)
                    tmpSQL = updateTempSQL
                    objDBWrite.ExecuteQuery(tmpSQL)
                Next

                _baseResponse.Message = "Question updated successfully."
            Else
                Dim question_id As String = RG.Apos(Guid.NewGuid.ToString)

                'Save Question 

                tmpSQL = "Insert into survey_questions_master (survey_id, question_id, question_text) 
                        values('" & SurveyId & "', '" & question_id & "','" & RG.Apos(SaveQuestionDetail.question_text) & "')"
                objDBWrite.ExecuteQuery(tmpSQL)

                'Save Options of Question

                optionsTempSQL = optionsTempSQL.Trim().Substring(0, optionsTempSQL.Length - 1)

                optionsTempSQL = optionsTempSQL.Replace("{question_id}", question_id)

                tmpSQL = optionsTempSQL
                objDBWrite.ExecuteQuery(tmpSQL)

                _baseResponse.Message = "Question created successfully."
            End If
        Catch ex As Exception
            If (objDBWrite IsNot Nothing) Then
                objDBWrite.CloseConnection()
            End If
            Return _baseResponse
        Finally
            If (objDBWrite IsNot Nothing) Then
                objDBWrite.CloseConnection()
            End If
        End Try

        _baseResponse.Success = True
        Return _baseResponse
    End Function

    Public Function GetSurveyList() As DataSet

        Dim objDB As New dlNpgSQL("PostgreConnectionStringPCMRead")
        tmpSQL = "Select sqm.*, (Select count(question_id) From survey_questions_master where survey_id = sqm.survey_id) as no_questions From survey_master sqm order by sqm.time_stamp desc"
        Try
            ds = objDB.GetDataSet(tmpSQL)
            If objDB.isR(ds) Then
                Return ds
            Else
                Return Nothing
            End If
        Catch ex As Exception
            If (objDB IsNot Nothing) Then
                objDB.CloseConnection()
            End If
            Return Nothing
        Finally
            If (objDB IsNot Nothing) Then
                objDB.CloseConnection()
            End If
        End Try
    End Function

    Public Function GetSelectedSurveyDetails(strSurveyId As String) As SurveyDetailsResponse
        If strSurveyId <> "" Then
            Dim objDBRead As New dlNpgSQL("PostgreConnectionStringPCMRead")

            tmpSQL = "SELECT * FROM survey_master WHERE survey_id = '" & strSurveyId & "'"

            Try
                ds = objDBRead.GetDataSet(tmpSQL)
                If objDBRead.isR(ds) Then
                    _surveyDetailsResponse.GetSelectedSurveyResponse = ds.Tables(0)
                    _surveyDetailsResponse.Success = True
                Else
                    _surveyDetailsResponse.Message = "Some issue occured. Please try again."
                    _surveyDetailsResponse.Success = False
                End If
            Catch ex As Exception
                If (objDBRead IsNot Nothing) Then
                    objDBRead.CloseConnection()
                End If
                _surveyDetailsResponse.Message = "Some issue occured. Please try again."
                _surveyDetailsResponse.Success = False
            Finally
                If (objDBRead IsNot Nothing) Then
                    objDBRead.CloseConnection()
                End If
            End Try
        Else
            _surveyDetailsResponse.Message = "Survey id is missing. Please try again."
            _surveyDetailsResponse.Success = False
        End If

        Return _surveyDetailsResponse
    End Function

    Public Function DeleteSurvey(survey_id As String) As BaseResponse
        Dim objDBWrite As New dlNpgSQL("PostgreConnectionStringPCMWrite")
        Try
            If survey_id = "" Then
                _baseResponse.Message = "Please select survey."
                _baseResponse.Success = False
                Return _baseResponse
            End If
            tmpSQL = "delete from survey_questions_master where survey_id='" & survey_id & "'"
            objDBWrite.ExecuteQuery(tmpSQL)
            tmpSQL = "delete from survey_questions_options where survey_id='" & survey_id & "'"
            objDBWrite.ExecuteQuery(tmpSQL)
            objDBWrite.ExecuteQuery(tmpSQL)
            tmpSQL = "delete from survey_master where survey_id= '" & survey_id & "'"
            objDBWrite.ExecuteQuery(tmpSQL)


        Catch ex As Exception
            If (objDBWrite IsNot Nothing) Then
                objDBWrite.CloseConnection()
            End If

        Finally
            If (objDBWrite IsNot Nothing) Then
                objDBWrite.CloseConnection()
            End If
        End Try
        _baseResponse.Message = "Survey deleted successfully."
        _baseResponse.Success = True
        Return _baseResponse
    End Function

    Public Function GetAllQuestionsBySurveyId(survey_id As String) As GetAllQuestionsResponse
        Dim GetAllQuestionsDT As DataTable
        Dim getAllQuestionsResponse As New GetAllQuestionsResponse

        If survey_id = "" Then
            _baseResponse.Message = "Please specify a Survey Id"
            _baseResponse.Success = False
            Return Nothing
        End If

        Dim objDBRead As New dlNpgSQL("PostgreConnectionStringPCMWrite")

        tmpSQL = "select to_json(array_agg(R.*)) FROM (
                    select sqm.*, (select to_json(array_agg(Op.*)) as Options FROM (select * from survey_questions_options where question_id = sqm.question_id order by option_id asc) Op) from survey_questions_master sqm where 
                    sqm.survey_id = '" & survey_id & "' order by time_stamp asc ) R;"
        Try
            ds = objDBRead.GetDataSet(tmpSQL)
            If objDBRead.isR(ds) Then
                GetAllQuestionsDT = ds.Tables(0)
            Else
                Return Nothing
            End If

        Catch ex As Exception
            If (objDBRead IsNot Nothing) Then
                objDBRead.CloseConnection()
            End If
            Return Nothing
        Finally
            If (objDBRead IsNot Nothing) Then
                objDBRead.CloseConnection()
            End If
        End Try

        Dim SurveyQuestionsJsonString As String = GetAllQuestionsDT.Rows(GetAllQuestionsDT.Rows.Count - 1)("to_json").ToString

        If SurveyQuestionsJsonString <> Nothing And SurveyQuestionsJsonString <> "" Then
            Dim SurveyQuestionsList As New SurveyQuestionsList

            SurveyQuestionsList.QuestionsList = JsonConvert.DeserializeObject(Of List(Of SurveyQuestions))(SurveyQuestionsJsonString)
            getAllQuestionsResponse.QuestionsList = SurveyQuestionsList.QuestionsList

        End If
        getAllQuestionsResponse.Success = True

        Return getAllQuestionsResponse

    End Function

    Public Function EditQuestion(question_id As String) As GetSelectedQuestionResponse
        Dim _getSelectedQuestionResponse As New GetSelectedQuestionResponse
        Dim GetSelectedQuestionResponse As DataTable
        Dim objDBRead As New dlNpgSQL("PostgreConnectionStringPCMWrite")
        If question_id = "" Then

            _baseResponse.Message = "Please specify a Survey Id"
            _baseResponse.Success = False
            Return Nothing
        End If
        tmpSQL = "select to_json(R.*) FROM (
 Select  sqm.*, (select to_json(array_agg(Op.*)) as Options FROM (select * from survey_questions_options where question_id = sqm.question_id order by option_id asc) Op) from survey_questions_master sqm where 
    sqm.question_id = '" & question_id & "' ) R"
        Try
            ds = objDBRead.GetDataSet(tmpSQL)
            If objDBRead.isR(ds) Then
                GetSelectedQuestionResponse = ds.Tables(0)
            Else
                Return Nothing
            End If

        Catch ex As Exception
            If (objDBRead IsNot Nothing) Then
                objDBRead.CloseConnection()
            End If
            Return Nothing
        Finally
            If (objDBRead IsNot Nothing) Then
                objDBRead.CloseConnection()
            End If
        End Try

        Dim SelectedQuestionsJsonString As String = GetSelectedQuestionResponse.Rows(GetSelectedQuestionResponse.Rows.Count - 1)("to_json").ToString

        If SelectedQuestionsJsonString <> Nothing And SelectedQuestionsJsonString <> "" Then
            Dim SurveyQuestions As New SurveyQuestions

            _getSelectedQuestionResponse.SurveyQuestions = JsonConvert.DeserializeObject(Of SurveyQuestions)(SelectedQuestionsJsonString)
        End If
        _getSelectedQuestionResponse.Success = True

        Return _getSelectedQuestionResponse
    End Function

    Public Function DeleteQuestion(question_id As String) As BaseResponse
        Dim objDBWrite As New dlNpgSQL("PostgreConnectionStringPCMWrite")
        Try
            If question_id = "" Then
                _baseResponse.Message = "Please select question."
                _baseResponse.Success = False
                Return _baseResponse
            End If
            tmpSQL = "delete from survey_questions_options where question_id='" & question_id & "'"
            objDBWrite.ExecuteQuery(tmpSQL)
            tmpSQL = "delete from survey_questions_master where question_id='" & question_id & "'"
            objDBWrite.ExecuteQuery(tmpSQL)
            _baseResponse.Message = "Question deleted successfully."
            _baseResponse.Success = True
        Catch ex As Exception
            If (objDBWrite IsNot Nothing) Then
                objDBWrite.CloseConnection()
                _baseResponse.Message = "Some issue occured. Please try again."
                _baseResponse.Success = False
            End If

        Finally
            If (objDBWrite IsNot Nothing) Then
                objDBWrite.CloseConnection()
            End If
        End Try

        Return _baseResponse
    End Function

    Public Function DeleteOption(ByVal question_id As String, option_id As Integer) As BaseResponse
        Dim objDBWrite As New dlNpgSQL("PostgreConnectionStringPCMWrite")
        Dim Is_Correct As String
        Try
            tmpSQL = "SELECT * from  survey_questions_options where question_id='" & question_id & "' and option_id= '" & option_id & "'"
            ds = objDBWrite.GetDataSet(tmpSQL)
            If objDBWrite.isR(ds) Then
                Is_Correct = ds.Tables(0).Rows(0)("is_correct")
                If Is_Correct = True Then
                    _baseResponse.Message = "You Cannot delete the answer"
                    _baseResponse.Success = False
                    Return _baseResponse
                Else
                    tmpSQL = "delete  from survey_questions_options where question_id='" & question_id & "' and option_id= '" & option_id & "' "
                    objDBWrite.ExecuteQuery(tmpSQL)

                    tmpSQL = "update survey_questions_options set option_id = option_id-1 where  question_id = '" & question_id & "' and option_id > " & option_id
                    objDBWrite.ExecuteQuery(tmpSQL)

                    _baseResponse.Message = "Option Deleted  successfully."
                    _baseResponse.Success = True
                End If
            Else
                _baseResponse.Message = "Invalid Option Id"
                _baseResponse.Success = False
                Return _baseResponse
            End If

        Catch ex As Exception

            If (objDBWrite IsNot Nothing) Then
                objDBWrite.CloseConnection()
                _baseResponse.Message = "Some issue occured. Please try again."
                _baseResponse.Success = False
                Return _baseResponse
            End If

        Finally
            If (objDBWrite IsNot Nothing) Then
                objDBWrite.CloseConnection()
            End If
        End Try

        Return _baseResponse
    End Function
End Class
